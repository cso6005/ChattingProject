
# kafka Setting
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id: soso
spring.kafka.consumer.auto-offset-reset: earliest
#spring.kafka.listener.ack-mode=MANUAL_IMMEDIATE

spring.kafka.consumer.key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer:org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class:org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.value.default.type: io.csy.chat.model.dto.MessageDTO
#spring.kafka.consumer.properties.spring.json.trusted.packages:io.csy.chat.model
spring.kafka.consumer.properties.spring.json.trusted.packages:*

spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.type.mapping: MessageDTO:io.csy.chat.model.dto.MessageDTO

spring.kafka.topic: chatting-topic

# Mysql
#DataSource Setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/star?characterEncoding=UTF-8
spring.datasource.username=bigdata
spring.datasource.password=bigdata

#JPA Setting
#spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.ddl-auto=none
spring.jpa.generate-ddl=false
spring.jpa.show-sql=true
spring.jpa.database=mysql
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
